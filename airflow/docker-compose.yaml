# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Modified to use existing PostgreSQL database
---
x-airflow-common:
  &airflow-common
  build: 
    context: .
    dockerfile: Dockerfile.airflow  # Add this line
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.10.5}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor  # Changed from CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:PostgreSQL32@host.docker.internal:5432/postgres
    AIRFLOW__CORE__FERNET_KEY: ''  # Generate a proper key for production
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'  # Disabled examples
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    # _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-psycopg2-binary}
    # my changes are below
    AIRFLOW__CORE__PARALLELISM: "8"  # ðŸ‘ˆ Absolute max concurrent tasks
    AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: "8"  # ðŸ‘ˆ Per-DAG limit
    _PIP_ADDITIONAL_REQUIREMENTS: "dbt-postgres==1.7.0 psycopg2-binary"  # Ensure exact version to connect to pssql
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    - ${AIRFLOW_PROJ_DIR:-.}/../commerce_dbt:/opt/airflow/commerce_dbt  # Added dbt project mount
    - ${AIRFLOW_PROJ_DIR:-.}/../dataset:/opt/airflow/dataset  # Added dbt project mount
  # user: "${AIRFLOW_UID:-50000}:0"
  user: "50000:0"

services:
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    # environment:
    #   - AIRFLOW__WEBSERVER__SECRET_KEY=cc4cb4a036198930f11024959754da136986a4a73f5f9a95ca182134120a491f
    # # For Linux hosts:
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    # environment:
    #   - AIRFLOW__WEBSERVER__SECRET_KEY=cc4cb4a036198930f11024959754da136986a4a73f5f9a95ca182134120a491f
    # # Sync clocks on Linux:
    # volumes:
    #   - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    user: "0:0"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}:/sources

  airflow-cli:
    <<: *airflow-common
    profiles:
      - debug
    environment:
      <<: *airflow-common-env
      CONNECTION_CHECK_MAX_COUNT: "0"
    command:
      - bash
      - -c
      - airflow

